// content.js ‚Äî SGS Helper (v2.4 + fixes)
// - ‡πÅ‡∏¢‡∏Å‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏£‡∏≠‡∏Å: ‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ / ‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ / ‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á
// - ‡∏õ‡∏∏‡πà‡∏°‡∏•‡πâ‡∏≤‡∏á: ‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ / ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ / ‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á
// - Parser ‡∏ó‡∏ô‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ñ‡∏ß + ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÄ‡∏î‡∏≤‡∏à‡∏≤‡∏Å KPAC ‡πÅ‡∏•‡∏∞ "30"
// - ‡πÅ‡∏û‡∏ï‡∏ä‡πå: ‡∏™‡∏•‡∏±‡∏ö‡∏≠‡∏¥‡∏ô‡πÄ‡∏î‡πá‡∏Å‡∏ã‡πå‡πÄ‡∏ó‡∏≠‡∏°1/‡πÄ‡∏ó‡∏≠‡∏°2 ‡∏ñ‡πâ‡∏≤‡∏´‡∏±‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡∏î‡πâ‡∏≤‡∏ô
// - ‡∏ï‡∏±‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏ç‡πà‡∏•‡∏≠‡∏¢‡∏≠‡∏≠‡∏Å‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏Ç‡∏≠

(() => {
  'use strict';

  // guard ‡∏Å‡∏±‡∏ô‡∏â‡∏µ‡∏î‡∏ã‡πâ‡∏≥
  if (window.__SGS_HELPER_INJECTED__) return;
  window.__SGS_HELPER_INJECTED__ = true;

  // polyfill CSS.escape (‡∏Å‡∏±‡∏ô‡πÄ‡∏Ñ‡∏™‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ)
  if (typeof window.CSS === 'undefined') window.CSS = {};
  if (!CSS.escape) {
    CSS.escape = s => String(s).replace(/[^a-zA-Z0-9_\-]/g, '\\$&');
  }

  // ===== CONFIG =====
  const WEB_ID_COL_INDEX = 3; // index ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß" ‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤ (‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å 0)
  const FIELD_SUFFIX = {
    keepTerm1: '$S1',      // ‡∏£‡∏ß‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ó‡∏≠‡∏° 1 (max 30)
    midterm:   '$Midterm', // ‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ (max 20)
    keepTerm2: '$S10',     // ‡∏£‡∏ß‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ó‡∏≠‡∏° 2 (max 30)
    final:     '$Final'    // ‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ (max 20)
  };

  // ‡∏£‡∏π‡∏õ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
  const REMOVE_LEADING_ZEROES = true;
  const PAD_ID_TO_LEN = 0; // ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏¥‡∏°‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß ‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (‡πÄ‡∏ä‡πà‡∏ô 5) ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 0

  // ‡πÄ‡∏û‡∏î‡∏≤‡∏ô‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô (‡∏Å‡∏±‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô)
  const CLAMP_MAX = { keep1:30, mid:20, keep2:30, fin:20 };

  // ‡∏Ç‡πâ‡∏≤‡∏°‡∏Ñ‡πà‡∏≤‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô‡∏ï‡∏≠‡∏ô "‡∏Å‡∏£‡∏≠‡∏Å"
  const SKIP_BLANK = true; // ‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≤‡∏°
  const SKIP_ZERO  = true; // ‡∏Ñ‡πà‡∏≤ 0 ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≤‡∏°

  // parser
  const ALLOW_HEADERLESS = true; // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏°‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á

  // ‡∏™‡∏µ‡πÑ‡∏Æ‡πÑ‡∏•‡∏ï‡πå
  const HIGHLIGHT = { matched: true, missing: true, cleared: true };

  // ===== ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ö‡∏ô Google Sheets =====
  const SAMPLE_SHEET_ID = '1CO_n0RjqG2nB5TvxvxsDgOKSiHdTV7a6JU0RCCBEye8';
  const SHEET_VIEW_URL  = `https://docs.google.com/spreadsheets/d/${SAMPLE_SHEET_ID}/edit?usp=sharing`;
  const SHEET_XLSX_URL  = `https://docs.google.com/spreadsheets/d/${SAMPLE_SHEET_ID}/export?format=xlsx`; // ‡πÄ‡∏û‡∏¥‡πà‡∏° &gid=... ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£


  // ===== Helpers (id / score) =====
  function normalizeId(id) {
    let s = (id ?? '').toString().trim().replace(/\s|-/g, '');
    if (REMOVE_LEADING_ZEROES) s = s.replace(/^0+/, '');
    if (/^\d+$/.test(s) && PAD_ID_TO_LEN > 0) s = s.padStart(PAD_ID_TO_LEN, '0');
    return s;
  }
  function clampScore(v, max) {
    if (v === '' || v == null) return '';
    const n = Number(String(v).replace(',', '.'));
    if (isNaN(n)) return '';
    const c = Math.max(0, Math.min(n, max));
    if (SKIP_ZERO && c === 0) return '';
    return c;
  }

  // ===== UI =====
  let panel, textarea, statusBox;
  function ensureUI(){
    if (document.getElementById('__sgs_helper_panel')) return;

    panel = document.createElement('div');
    panel.id = '__sgs_helper_panel';
    panel.style.cssText = `
      position: fixed; right: 16px; bottom: 16px; z-index: 2147483647;
      width: 440px; background: #fff; border: 1px solid #ddd; border-radius: 12px;
      box-shadow: 0 8px 24px rgba(0,0,0,.18); font-family: system-ui, sans-serif; color:#333;
    `;
    panel.innerHTML = `
      <div style="display:flex;align-items:center;justify-content:space-between;padding:10px 12px;border-bottom:1px solid #eee;">
        <div style="font-weight:700;">üìã ‡∏ß‡∏≤‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å Excel ‚Üí ‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</div>
        <button id="__sgs_toggle" style="padding:4px 8px;cursor:pointer;">‡∏ã‡πà‡∏≠‡∏ô</button>
      </div>
      <div style="padding:10px 12px;">
        <div style="font-size:13px;line-height:1.4;margin-bottom:6px;">
          ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á: <b>‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß</b>, <b>‡∏£‡∏ß‡∏°(‡πÄ‡∏ó‡∏≠‡∏°1)</b>, <b>‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ (‡πÄ‡∏ï‡πá‡∏°/‡πÅ‡∏Å‡πâ‡∏ï‡∏±‡∏ß)</b>, <b>‡∏£‡∏ß‡∏°(‡πÄ‡∏ó‡∏≠‡∏°2)</b>, <b>‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ</b><br>
          ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î: <b>‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô</b>, <b>‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô</b>, ‡∏´‡∏£‡∏∑‡∏≠ <b>‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á</b> ‚Ä¢ ‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á/0 ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏Ç‡πâ‡∏≤‡∏°‡∏ï‡∏≠‡∏ô‡∏Å‡∏£‡∏≠‡∏Å
        </div>
        <textarea id="__sgs_text" rows="7" style="width:100%;box-sizing:border-box;font-size:12px;"></textarea>

        <div style="margin-top:8px;display:flex;flex-direction:column;gap:8px;">
          <!-- ‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô: ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏≤‡∏ß‡πÄ‡∏ï‡πá‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á -->
          <button id="__sgs_read"
                  style="width:100%;padding:10px;cursor:pointer;">
            ‡∏ß‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡∏•‡∏¥‡∏õ‡∏ö‡∏≠‡∏£‡πå‡∏î
          </button>

          <!-- ‡πÅ‡∏ñ‡∏ß‡∏•‡πà‡∏≤‡∏á: 2 ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏ö‡πà‡∏á‡∏Ñ‡∏£‡∏∂‡πà‡∏á -->
          <div style="display:flex;gap:8px;">
            <button id="__sgs_mid"
                    style="flex:1;padding:10px;cursor:pointer;background:#2d7;color:#fff;border:none;">
              ‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ
            </button>
            <button id="__sgs_final"
                    style="flex:1;padding:10px;cursor:pointer;background:#f39c12;color:#fff;border:none;">
              ‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ
            </button>
            <button id="__sgs_all"   style="flex:1 1 140px;padding:10px;cursor:pointer;background:#1363df;color:#fff;border:none;">‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á</button>
          </div>
        </div>


        <div style="margin-top:10px;border-top:1px dashed #eee;padding-top:10px;">
          <div style="font-size:13px;margin-bottom:6px;"><b>üßπ ‡πÇ‡∏ã‡∏ô‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏ó‡∏∏‡∏Å‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ)</b></div>
          <div style="display:flex;gap:8px;flex-wrap:wrap;">
            <button id="__sgs_clear_mid"   style="flex:1 1 140px;padding:10px;cursor:pointer;background:#e74c3c;color:#fff;border:none;">‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ</button>
            <button id="__sgs_clear_final" style="flex:1 1 140px;padding:10px;cursor:pointer;background:#d35400;color:#fff;border:none;">‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ</button>
            <button id="__sgs_clear_all"   style="flex:1 1 140px;padding:10px;cursor:pointer;background:#b00020;color:#fff;border:none;">‡∏•‡πâ‡∏≤‡∏á‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á (‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)</button>
          </div>
          <div style="font-size:12px;color:#777;margin-top:4px;">* ‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏î</div>
        </div>

        <div style="margin-top:10px;border-top:1px dashed #eee;padding-top:10px;">
          <div style="font-size:13px;margin-bottom:6px;"><b>üìé ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å</b></div>
          <div id="__sgs_examples" style="display:flex;flex-direction:column;gap:6px;font-size:13px;"></div>
        </div>

        <div id="__sgs_status" style="margin-top:10px;font-size:12px;color:#555;"></div>
      </div>
    `;
    document.body.appendChild(panel);

    const styleHide = document.createElement('style');
    styleHide.textContent = `
      #__sgs_all, #__sgs_clear_all { display: none !important; }
    `;
    document.head.appendChild(styleHide);

    textarea  = document.getElementById('__sgs_text');
    statusBox = document.getElementById('__sgs_status');

    const exBox = panel.querySelector('#__sgs_examples');
      if (exBox){
        exBox.innerHTML = `
          <a href="${SHEET_VIEW_URL}" target="_blank" rel="noopener" style="color:#1363df;">üîó ‡πÄ‡∏õ‡∏¥‡∏î‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á (Google Sheets)</a>
          <a href="${SHEET_XLSX_URL}" target="_blank" rel="noopener" style="color:#1363df;">‚¨áÔ∏è ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á (.xlsx)</a>
          <div style="color:#666;font-size:12px;">
            * ‡πÉ‡∏´‡πâ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á: <b>‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß</b>, <b>‡∏£‡∏ß‡∏°(‡πÄ‡∏ó‡∏≠‡∏°1)</b>, <b>‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ (‡πÄ‡∏ï‡πá‡∏°/‡πÅ‡∏Å‡πâ‡∏ï‡∏±‡∏ß)</b>, <b>‡∏£‡∏ß‡∏°(‡πÄ‡∏ó‡∏≠‡∏°2)</b>, <b>‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ</b>
          </div>
        `;
      }

    document.getElementById('__sgs_read').addEventListener('click', async ()=>{
      try{
        if (navigator.clipboard?.readText) {
          textarea.value = await navigator.clipboard.readText();
          flash('‡∏ß‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß ‚Ä¢ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î ‚Äú‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ/‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ‚Äù', 'ok');
        } else {
          flash('‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏•‡∏¥‡∏õ‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î Ctrl+V', 'warn');
        }
      }catch{
        flash('‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏•‡∏¥‡∏õ‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î Ctrl+V', 'warn');
      }
    });
    document.getElementById('__sgs_mid').addEventListener('click',   ()=>handleFill('mid'));
    document.getElementById('__sgs_final').addEventListener('click', ()=>handleFill('final'));
    document.getElementById('__sgs_all').addEventListener('click',   ()=>handleFill('all'));

    // ‡∏õ‡∏∏‡πà‡∏°‡∏•‡πâ‡∏≤‡∏á
    document.getElementById('__sgs_clear_mid').addEventListener('click',   ()=>handleClear('mid'));
    document.getElementById('__sgs_clear_final').addEventListener('click', ()=>handleClear('final'));
    document.getElementById('__sgs_clear_all').addEventListener('click',   ()=>handleClear('all'));

    document.getElementById('__sgs_toggle').addEventListener('click', (e)=>{
      const box = panel.querySelector('div:nth-child(2)');
      if (box.style.display === 'none'){ box.style.display = ''; e.target.textContent='‡∏ã‡πà‡∏≠‡∏ô'; }
      else { box.style.display = 'none'; e.target.textContent='‡πÅ‡∏™‡∏î‡∏á'; }
    });
  }

  function flash(msg, type='info'){
    if (!statusBox) return;
    statusBox.textContent = msg;
    statusBox.style.color = (type==='ok') ? '#0a0' : (type==='warn') ? '#B36B00' : (type==='error') ? '#C00' : '#333';
  }

  // ‡πÄ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ï‡∏≤‡∏°‡πÇ‡∏´‡∏°‡∏î
  function enableColumns(mode){
    setTimeout(()=>{
      const need = {
        s1:  (mode==='mid'   || mode==='all'),
        mid: (mode==='mid'   || mode==='all'),
        s10: (mode==='final' || mode==='all'),
        fin: (mode==='final' || mode==='all')
      };
      try{ if (need.s1  && typeof window.check==='function') window.check(true, 'S1'); }catch(e){}
      try{ if (need.mid && typeof window.check==='function') window.check(true, 'Midterm'); }catch(e){}
      try{ if (need.s10 && typeof window.check==='function') window.check(true, 'S10'); }catch(e){}
      try{ if (need.fin && typeof window.check==='function') window.check(true, 'Final'); }catch(e){}

      const ids = [];
      if (need.s1)  ids.push('ctl00_PageContent_Check1');
      if (need.mid) ids.push('ctl00_PageContent_CheckM');
      if (need.s10) ids.push('ctl00_PageContent_Check10');
      if (need.fin) ids.push('ctl00_PageContent_CheckF');
      ids.forEach(id=>{
        const cb = document.getElementById(id);
        if (cb && !cb.checked && !cb.disabled){ try{ cb.click(); }catch(e){} }
      });
    }, 300);
  }

  // Paste ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏ô‡πâ‡∏≤ (‡∏™‡∏∞‡∏î‡∏ß‡∏Å)
  document.addEventListener('paste', (ev)=>{
    const t = ev.target;
    if (t && (t.tagName==='INPUT' || t.tagName==='TEXTAREA') && t.id!=='__sgs_text') return;
    const txt = ev.clipboardData?.getData('text') || '';
    if (txt && txt.includes('\t')){
      ensureUI();
      textarea.value = txt;
      panel.querySelector('div:nth-child(2)').style.display='';
      flash('‡∏ß‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß ‚Ä¢ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î ‚Äú‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ/‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ/‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á‚Äù', 'ok');
      ev.preventDefault();
    }
  }, true);

  // ===== Parser (‡∏´‡∏±‡∏ß‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ñ‡∏ß + ‡πÄ‡∏î‡∏≤) =====
  function normText(s){
    return (s??'').toString().trim().replace(/\s+/g,'').replace(/[(){}\[\]\-_/]/g,'').toLowerCase();
  }
  function looksLikeDataRow(row){
    const a = (row?.[0] ?? '').toString().trim();
    const digits = a.replace(/\D/g,'');
    return digits.length >= 4;
  }
  function colHasExactNumber(headerRows, colIdx, numberStr){
    return headerRows.some(r => (r[colIdx]||'').toString().trim() === String(numberStr));
  }
  function hasKPACCluster(headerRows, colIdx){
    const want = new Set(['k','p','a','c']);
    for (let j = Math.max(0, colIdx-6); j < colIdx; j++){
      const cellTokens = headerRows.map(r => normText(r[j]||''));
      if (cellTokens.some(t => want.has(t))){
        cellTokens.forEach(t => want.delete(t));
        if (want.size === 0) return true;
      }
    }
    return false;
  }

  function parseClipboardTable(raw){
    const lines = raw.split(/\r?\n/).filter(l=>l.trim()!=='');
    const rows  = lines.map(l=> l.split('\t').map(s=>(s??'').toString().trim()));
    if (rows.length < 1) throw new Error('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');

    // ‡∏´‡∏≤‡πÅ‡∏ñ‡∏ß‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á
    let dataStart = 0;
    for (let i=0; i<Math.min(rows.length, 6); i++){
      if (looksLikeDataRow(rows[i])) { dataStart = i; break; }
    }

    // ‡πÇ‡∏´‡∏°‡∏î‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    if (dataStart === 0 && ALLOW_HEADERLESS){
      const n = rows[0].length;
      if (n === 6){
        return { rows: rows, index: { idIdx:0, keep1Idx:2, midFullIdx:3, midMakeupIdx:-1, keep2Idx:4, finalIdx:5 } };
      } else if (n === 5){
        return { rows: rows, index: { idIdx:0, keep1Idx:1, midFullIdx:2, midMakeupIdx:-1, keep2Idx:3, finalIdx:4 } };
      } else {
        throw new Error(`‡πÇ‡∏´‡∏°‡∏î‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á: ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå (${n}) ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà 5 ‡∏´‡∏£‡∏∑‡∏≠ 6`);
      }
    }

    // ‡∏£‡∏ß‡∏°‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ñ‡∏ß
    const headerRows = rows.slice(0, dataStart);
    const maxCols = Math.max(...headerRows.map(r => r.length));
    const headerCombined = [];
    for (let c=0; c<maxCols; c++){
      const joined = headerRows.map(r => r[c] || '').join('_');
      headerCombined.push(normText(joined));
    }

    // 1) ‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß
    const idIdx = headerCombined.findIndex(h => /‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß|studentid/.test(h));
    if (idIdx < 0) throw new Error("‡∏´‡∏≤ '‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß' ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ô‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á");

    // 2) ‡∏£‡∏ß‡∏°(‡πÄ‡∏ó‡∏≠‡∏°1/2)
    let sumCandidates = [];
    for (let i=0; i<headerCombined.length; i++){
      const h = headerCombined[i];
      if ((/(^|_)‡∏£‡∏ß‡∏°($|_)/.test(h)) && !/‡∏£‡∏ß‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô/.test(h)) {
        sumCandidates.push(i);
      }
    }
    if (sumCandidates.length < 2){
      for (let i=0; i<maxCols; i++){
        if (colHasExactNumber(headerRows, i, '30') && hasKPACCluster(headerRows, i)) {
          if (!sumCandidates.includes(i)) sumCandidates.push(i);
        }
      }
      sumCandidates = sumCandidates.sort((a,b)=>a-b).slice(0,2);
    }
    if (sumCandidates.length < 2) throw new Error("‡∏´‡∏≤ '‡∏£‡∏ß‡∏°' ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ó‡∏≠‡∏° 1/2 ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö");

    let keep1Idx, keep2Idx;
    const left = sumCandidates[0], right = sumCandidates[1];
    const leftH  = headerCombined[left],  rightH = headerCombined[right];

    const leftIsT1  = /(1.*‡∏£‡∏ß‡∏°|‡πÄ‡∏ó‡∏≠‡∏°1|‡∏†‡∏≤‡∏Ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô1|t1)/.test(leftH);
    const leftIsT2  = /(2.*‡∏£‡∏ß‡∏°|‡πÄ‡∏ó‡∏≠‡∏°2|‡∏†‡∏≤‡∏Ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô2|t2)/.test(leftH);
    const rightIsT1 = /(1.*‡∏£‡∏ß‡∏°|‡πÄ‡∏ó‡∏≠‡∏°1|‡∏†‡∏≤‡∏Ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô1|t1)/.test(rightH);
    const rightIsT2 = /(2.*‡∏£‡∏ß‡∏°|‡πÄ‡∏ó‡∏≠‡∏°2|‡∏†‡∏≤‡∏Ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô2|t2)/.test(rightH);

    // ‡∏î‡∏µ‡∏ü‡∏≠‡∏•‡∏ï‡πå: ‡∏ã‡πâ‡∏≤‡∏¢=‡πÄ‡∏ó‡∏≠‡∏°1 ‡∏Ç‡∏ß‡∏≤=‡πÄ‡∏ó‡∏≠‡∏°2
    keep1Idx = left;
    keep2Idx = right;
    // ‡∏ñ‡πâ‡∏≤‡∏´‡∏±‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô (‡∏ã‡πâ‡∏≤‡∏¢‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏ó‡∏≠‡∏°2 ‡πÅ‡∏•‡∏∞‡∏Ç‡∏ß‡∏≤‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏ó‡∏≠‡∏°1) ‚Üí ‡∏™‡∏•‡∏±‡∏ö
    if (leftIsT2 && rightIsT1) {
      keep1Idx = right;
      keep2Idx = left;
    }

    // 3) ‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ (‡πÄ‡∏ï‡πá‡∏°/‡πÅ‡∏Å‡πâ‡∏ï‡∏±‡∏ß)
    const midFullIdx   = headerCombined.findIndex(h => /‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ.*‡πÄ‡∏ï‡πá‡∏°|‡πÄ‡∏ï‡πá‡∏°.*‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ|midterm.*full|full.*midterm/.test(h));
    const midMakeupIdx = headerCombined.findIndex(h => /‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ.*‡πÅ‡∏Å‡πâ‡∏ï‡∏±‡∏ß|‡πÅ‡∏Å‡πâ‡∏ï‡∏±‡∏ß.*‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ|midterm.*makeup|makeup.*midterm|‡∏ã‡πà‡∏≠‡∏°/.test(h));

    // 4) ‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ
    const finalIdx = headerCombined.findIndex(h => /‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ|final/.test(h));
    if (finalIdx < 0) throw new Error("‡∏´‡∏≤ '‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ' ‡πÑ‡∏°‡πà‡∏û‡∏ö");

    return {
      rows: rows.slice(dataStart),
      index: { idIdx, keep1Idx, midFullIdx, midMakeupIdx, keep2Idx, finalIdx }
    };
  }

  function buildMapById(parsed){
    const { rows, index } = parsed;
    const map = new Map();
    for (const r of rows){
      const id  = normalizeId(r[index.idIdx]);
      if (!id) continue;
      const keep1 = clampScore(r[index.keep1Idx], CLAMP_MAX.keep1);
      const midF  = (index.midFullIdx   >= 0) ? clampScore(r[index.midFullIdx],   CLAMP_MAX.mid) : '';
      const midM  = (index.midMakeupIdx >= 0) ? clampScore(r[index.midMakeupIdx], CLAMP_MAX.mid) : '';
      const keep2 = clampScore(r[index.keep2Idx], CLAMP_MAX.keep2);
      const fin   = clampScore(r[index.finalIdx], CLAMP_MAX.fin);

      const mid   = (midF !== '' ? midF : midM); // ‡πÉ‡∏ä‡πâ "‡πÄ‡∏ï‡πá‡∏°" ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ ‡πÑ‡∏°‡πà‡∏á‡∏±‡πâ‡∏ô‡πÉ‡∏ä‡πâ "‡πÅ‡∏Å‡πâ‡∏ï‡∏±‡∏ß"
      map.set(id, { keep1, mid, keep2, fin });
    }
    if (map.size===0) throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÅ‡∏ñ‡∏ß‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ');
    return map;
  }

  // ===== ‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏≤‡∏°‡πÇ‡∏´‡∏°‡∏î =====
  function handleFill(mode){
    const raw = (textarea?.value || '').trim();
    if (!raw){ flash('‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ß‡∏≤‡∏á', 'warn'); return; }
    try{
      const parsed = parseClipboardTable(raw);
      const mapById = buildMapById(parsed);
      enableColumns(mode);
      const res = fillIntoWebTable(mapById, mode);
      showSummary(res);
    }catch(e){
      console.error(e);
      flash('‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: '+e.message, 'error');
    }
  }

  function fillIntoWebTable(mapById, mode){
    const rows = Array.from(document.querySelectorAll('tr'))
      .filter(tr => tr.querySelector("input[name*='TblTranscriptsTableControlRepeater']"));

    let matched=0, missing=0, filled=0;
    for (const tr of rows){
      const tds = tr.querySelectorAll('td');
      if (!tds || tds.length===0) continue;

      const idCell = tds[WEB_ID_COL_INDEX];
      const pageId = normalizeId((idCell?.innerText || idCell?.textContent || '').trim());
      if (!pageId) continue;

      const data = mapById.get(pageId);
      if (!data){ markRow(tr,'missing'); missing++; continue; }

      const doKeep1 = (mode==='mid'   || mode==='all');
      const doMid   = (mode==='mid'   || mode==='all');
      const doKeep2 = (mode==='final' || mode==='all');
      const doFinal = (mode==='final' || mode==='all');

      if (doKeep1) filled += setInputBySuffix(tr, FIELD_SUFFIX.keepTerm1, data.keep1);
      if (doMid)   filled += setInputBySuffix(tr, FIELD_SUFFIX.midterm,   data.mid);
      if (doKeep2) filled += setInputBySuffix(tr, FIELD_SUFFIX.keepTerm2, data.keep2);
      if (doFinal) filled += setInputBySuffix(tr, FIELD_SUFFIX.final,     data.fin);

      markRow(tr,'matched');
      matched++;
    }
    return { matched, missing, filled, totalRows: rows.length };
  }

  function setInputBySuffix(row, suffix, value){
    if ((value==='' || value==null) && SKIP_BLANK) return 0; // ‡∏Ç‡πâ‡∏≤‡∏°‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á‡∏ñ‡πâ‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ
    const input = row.querySelector(`input[name$='${CSS.escape(suffix)}']`);
    if (!input) return 0;
    if (input.disabled) input.disabled = false;

    input.focus();
    input.value = (value==='' || value==null) ? '' : value;
    input.dispatchEvent(new Event('input',  { bubbles:true }));
    input.dispatchEvent(new Event('change', { bubbles:true }));
    input.dispatchEvent(new KeyboardEvent('keyup',{bubbles:true,key:'Tab'}));
    input.blur();
    return 1;
  }

  // ===== ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• =====
  function handleClear(mode){
    const label = mode==='mid' ? '‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ (S1 + ‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ)'
                 : mode==='final' ? '‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ (S10 + ‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ)'
                 : '‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á (S1 + ‡∏Å‡∏•‡∏≤‡∏á‡∏†‡∏≤‡∏Ñ + S10 + ‡∏õ‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ)';
    if (!confirm(`‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${label} ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ?`)) return;
    if (mode==='all' && !confirm('‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á: ‡∏•‡πâ‡∏≤‡∏á ‚Äú‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á‚Äù ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏ô‡πâ‡∏≤ ‚Äî ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö?')) return;

    enableColumns(mode);

    const rows = Array.from(document.querySelectorAll('tr'))
      .filter(tr => tr.querySelector("input[name*='TblTranscriptsTableControlRepeater']"));

    let cleared = 0;
    for (const tr of rows){
      const doKeep1 = (mode==='mid'   || mode==='all');
      const doMid   = (mode==='mid'   || mode==='all');
      const doKeep2 = (mode==='final' || mode==='all');
      const doFinal = (mode==='final' || mode==='all');

      if (doKeep1) cleared += clearInputBySuffix(tr, FIELD_SUFFIX.keepTerm1);
      if (doMid)   cleared += clearInputBySuffix(tr, FIELD_SUFFIX.midterm);
      if (doKeep2) cleared += clearInputBySuffix(tr, FIELD_SUFFIX.keepTerm2);
      if (doFinal) cleared += clearInputBySuffix(tr, FIELD_SUFFIX.final);

      if (HIGHLIGHT.cleared) markRow(tr,'cleared');
    }
    flash(`‡∏•‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß ‚Ä¢ ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏•‡πâ‡∏≤‡∏á: ${cleared} | ‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤: ${rows.length}`, 'ok');
  }

  function clearInputBySuffix(row, suffix){
    const input = row.querySelector(`input[name$='${CSS.escape(suffix)}']`);
    if (!input) return 0;
    if (input.disabled) input.disabled = false;

    const prev = input.value;
    input.focus();
    input.value = ''; // ‡∏•‡πâ‡∏≤‡∏á
    input.dispatchEvent(new Event('input',  { bubbles:true }));
    input.dispatchEvent(new Event('change', { bubbles:true }));
    input.blur();
    return prev && String(prev).trim() !== '' ? 1 : 0;
  }

  // ===== ‡πÑ‡∏Æ‡πÑ‡∏•‡∏ï‡πå/‡∏™‡∏£‡∏∏‡∏õ =====
  function markRow(tr,state){
    tr.style.transition='background .25s ease';
    if (state==='matched' && HIGHLIGHT.matched) tr.style.background='rgba(46,204,113,.12)';
    if (state==='missing' && HIGHLIGHT.missing) tr.style.background='rgba(241,196,15,.15)';
    if (state==='cleared' && HIGHLIGHT.cleared) tr.style.background='rgba(127,140,141,.12)'; // ‡πÄ‡∏ó‡∏≤‡∏≠‡πà‡∏≠‡∏ô
  }

  function showSummary({ matched, missing, filled, totalRows }){
    flash(`‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤: ${totalRows} | ‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${matched} | ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏≤‡∏á: ${missing} | ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å: ${filled}`,'ok');
  }

  // ===== Boot =====
  function boot(){ ensureUI(); }
  boot();
  const mo = new MutationObserver(()=>boot());
  mo.observe(document.documentElement, { childList:true, subtree:true });
})();
